 
МИНОБРНАУКИ РОССИИ
Федеральное государственное бюджетное образовательное учреждение 
высшего профессионального образования
«Московский государственный технический университет радиотехники, электроники и автоматики»
МГТУ МИРЭА
 Институт информационных технологий (ИТ)
«наименование факультета»
Кафедра базовая автоматизированных систем организационного управления (АСОУ) №239 МГТУ МИРЭА при ФГУП НИИ «Восход»
«наименование кафедры»

КУРСОВАЯ РАБОТА
по дисциплине
_____Программирование 1____
<Наименование дисциплины>

Тема курсовой работы: “Генератор случайных текстов”
<Название темы курсовой работы/проекта>

Студент группы ИВБ-3-14			Шмидт М.И.
<код группы>	<подпись студента>		<ФИО студента>
Руководитель курсовой работы			
Ассистент
			<должность, звание, уч.степень>
			Хлебников А.А.
	<подпись руководителя>		< ФИО руководителя >
Рецензент (при наличии)			
			<должность, звание, уч.степень>
			
	<подпись рецензента>		< ФИО рецензента>
			
			
Работа представлена к защите	«___»________201_ г.		
			<подпись студента>
«Допущен к защите»	«___»________201_ г.		
			<подпись руководителя>










 
МИНОБРНАУКИ РОССИИ
Федеральное государственное бюджетное образовательное учреждение 
высшего профессионального образования
«Московский государственный технический университет радиотехники, электроники и автоматики»
МГТУ МИРЭА
Институт информационных технологий (ИТ)
«наименование факультета»
Кафедра базовая автоматизированных систем организационного управления (АСОУ) №239 МГТУМИРЭА при ФГУП НИИ «Восход»
«наименование кафедры»
	УТВЕРЖДАЮ
Заведующий
кафедрой _____________________ Н.В. Волков
«____» ___________________ 201__г.
ЗАДАНИЕ
на выполнение курсовой работы
по дисциплине	«Программирование 1»
	«Название дисциплины»
Студент	Шмидт Максим Игоревич	Группа	ИВБ-3-14
			
1.Тема курсовой работы
              “Генератор случайных текстов”
2. Исходные данные
-	Интерфейс генератора:
	Процесс генерации
	Графическое отображение результата
-	Программа должна обеспечивать следующие операции:
	Беспроблемная работа интерфейса программы
	Простота использования интерфейса программы
	Адекватное отображение результата использования программы
2. Перечень вопросов, подлежащих разработке, и обязательного графического материала:
-	разработка текстового интерфейса меню
-	Программная реализация генератора.
4. Срок представления к защите курсового проекта (работы): до «___» __________201_ г.
Задание на курсовой проект (работу) выдал	
«___»_______201_ г.				Хлебников А.А.
			<подпись руководителя проекта>		<Ф.И.О. руководителя проекта>
Задание на курсовой проект (работу) получил	
«___»_______201_ г.				
Шмидт М.И.





			<подпись студента-исполнителя проекта>		<Ф.И.О. студента-исполнителя проекта>






Мониторинг процесса выполнения курсового проекта (работы)

№

э
т
апа	Наименование этапа курсового проекта, работы	Этап курсового проекта, работы выполнил и представил результаты руководителю проекта (работы),
дата и подпись исполнителя	Работу по этапу курсового проекта (работы) принял на рассмотрение,
дата и подпись руководителя	Рекомендации и замечания по 
этапу курсового проекта (работы) 
выдал 
исполнителю,
дата и подпись руководителя	Оценка выполнения этапа курсового проекта, (работы)
(в соответствии с балльно-рейтинговой системой)	Комментарии
 руководителя курсового проекта (работы)

1	Разработка задания на КР					
2	Анализ задачи					
3	Разработка алгоритма задачи					
4	Разработка структуры проекта					
5	Разработка интерфейса пользователя					
6	Разработка схемы программных взаимодействия единиц, группируя по модулям					
7	Разработка приложения					
8	Разработка пояснительной записки					
9	Защита курсовой работы					

 

Реферат

Объект исследования – программирование на языке С++

Предмет исследования – Генератор случайных текстов.

Цель работы: закрепление, углубление и использование практических знаний по программированию на языке С++, таких как самостоятельная разработка и реализация программы, работа с функциями и стандартными библиотеками C++. В процессе данной работы проводилась тщательная разработка алгоритмов, тестирование и отладка приложения, его элементов и модулей.

Область возможного практического применения:  домашнее использование; пример для более детальной разработки схожих программ и приложений.

















ЛИСТ ЗАМЕЧАНИЙ

































Содержание
Введение	
1. Основная часть	
1.1. Обоснование выбора средств и методов для выполнения задания	
2. Интерфейс командной строки……………………………………………………
3. Приложения…………………………………………………………………….…
4. Заключение	
5. Список литературы	





















Введение

Язык C++ невероятно популярен среди программистов, так как предназначен для разработки высокопроизводительного ПО и при этом достаточно прост в изучении и дальнейшем использовании. Он позволяет создавать приложения самого разнообразного назначения, что делает его ещё и прекрасным инструментом для обучения программированию новых пользователей. 
Область его применения весьма обширна. Она включает в себя разработку операционных систем, прикладных программ различного профиля; язык широко используется для создания компьютерных игр, разработки драйверов устройств и много другого. Его обеспечение определённого концептуального фундамента, позволяет быть опорой для других языков программирования, таких как потомки C++: Java, C# и др. Он заслуживает титул универсального языка программирования, поскольку практически все программисты знакомы с ним, в той или иной степени. Его история создания начинается с языка C – компилируемого статически типизированного языка программирования, имеющего общее назначение, который был разработан Денисом Ричи (сотрудником Bell Labs) в 1969-1973 годах для операционной системы UNIX и впоследствии успешно перенесенным на другие платформы. Он появился в результате революции в структурированном программировании 60-х годов, упростив написание длинных программ и став самым популярным языком программирования 1980-х.
Изобретение C++ позволило еще лучше справляться со сложностью программирования, несмотря на всё больший рост программ в размерах, так как методы структурного программирования не позволяли справиться со сложностью особо громоздких программ. Новая технология – объектно-ориентированное программирование -, успешно реализованное в C++, позволило справиться с данной проблемой.
C++ построен на фундаменте C, таким образом представляя собой его супер множество. Он является улучшенной и расширенной версией своего прародителя, предназначенной для поддержки объектно-ориентированного программирования (ООП). C++ обладает, к примеру, расширенным набором библиотечных функций по сравнению с C.
В данной работе требуется разработать консольное приложение, обеспеченное текстовым интерфейсом. Необходимо использование файловых потоков ввода/вывода, а также различных функций стандартных библиотек языка C++ (STL).
Всё это позволит в нужной мере отобразить алгоритмы генерации случайных текстов. 
Генератор текста — компьютерная программа, генерирующая тексты, корректные с точки зрения большинства языковых норм, но, как правило, лишённые смысла (в связи с чем такие программы иногда называют «генераторами бреда», «генераторами шизофазии»).
Компьютерная программа — последовательность инструкций, предназначенных для исполнения устройством управления вычислительной машины. Программа — один из компонентов программного обеспечения. В зависимости от контекста рассматриваемый термин может относиться также и к исходным текстам программы. Компьютерные программы как объект авторского права и других прав интеллектуальной собственности относится к категории нематериальных активов.
Шизофазия, или речевая разорванность — это симптом психических расстройств, выражающийся в нарушении структуры речи, при котором, в отличие от речевой бессвязности (потока несвязанных слов), фразы строятся правильно, однако не несут никакой смысловой нагрузки, а содержание речи соответствует содержанию бреда. Это расстройство речи отражает разорванность мышления пациентов.
Это расстройство характерно прежде всего для шизофрении. Понятие шизофазии было введено Э. Крепелином в 1913 году и некоторое время она считалась особой формой шизофрении. Некоторые авторы даже выделяют отдельную форму шизофрении с таким названием.
Для шизофазии характерна повышенная речевая активность, речевой напор, а также «симптом монолога», характеризующийся речевой неистощимостью и отсутствием потребности в собеседнике. Как правило, этот симптом сочетается с внешней упорядоченностью, доступностью для общения и относительной интеллектуальной и аффективной сохранностью больных. Отличительной чертой шизофазии считаются преимущественная продукция морфемных словообразований и «глоссоманиакальных высказываний». Помимо параноидной формы шизофрении она может возникать при тяжёлом слабоумии.
 Случайный текст - это последовательность слов, пробелов и знаков препинания. Слова, из которых состоит случайный текст, совсем необязательно существуют в реальном языке, так же как и сам случайный текст может вовсе не иметь смысла. Случайные тексты играют огромную роль в жизни современного общества. Многие композиторы используют генераторы случайных текстов для создания стихов к написанной ими музыке. Сама музыка также может быть сгенерирована подобными генераторами. Многие газетные и журнальные статьи тоже генерируются компьютерами. При этом используются профессиональные генераторы случайных текстов, генерирующие текст, мало отличимый от текста, созданного человеком. В связи с вышесказанным, данная курсовая работа является очень актуальной. Иногда у читающего сгенерированный такой программой текст (например, использующей цепь Маркова) может сложиться впечатление, что этот текст является осмысленным, особенно если текст имеет тематику, с которой читающий слабо знаком. Например, некоторые люди не понимают философию и считают любой философский текст, содержащий большое число специфических терминов, бредом, поэтому они не могут определить искусственный характер псевдофилософского текста, написанного программой.
Существуют разные виды генераторов текста, различающиеся своими возможностями (например, некоторые из них могут самостоятельно формировать новые слова).
Применение:
На данном уровне развития компьютерных технологий генераторы текста имеют небольшое практическое применение и используются в основном для развлечения и в экспериментальных целях.
Кроме того, генераторы текстов достаточно широко используются при поисковой оптимизации web-сайтов, для генерации названий, описаний, а иногда и содержимого целых сайтов. Материалы, созданные при помощи генератора текстов и использующиеся в целях поисковой оптимизации, требуют обязательного тщательного отбора по критерию уникальности. Производится данный отбор при помощи специализированного программного обеспечения, имеющего различный алгоритм проверки.
Также генераторы текстов успешно используются для выявления низкого качества (а иногда и полного отсутствия) рецензирования в научных журналах. Особенно известна в этом плане программа SCIgen.
SCIgen — компьютерная программа, генерирующая случайный текст, напоминающий научную статью, содержащую иллюстрации, графики и примечания. Заявленное назначение: «автоматически генерировать тезисы для конференций, подозреваемых в низком цензе приёма».
В 2005 году «статья» «Rooter: A Methodology for the Typical Unification of Access Points and Redundancy» была принята к публикации (без рецензирования статьи) WMSCI и авторы были приглашены на конференцию. Авторы рассказали о мистификации на своём сайте, в результате чего конференция WMSCI лишилась финансовой поддержки со стороны IEEE.
Позже созданные с помощью программы «статьи» были приняты к публикации на конференциях IPSI-BG и International Symposium of Interactive Media Design. Студент из Ирана под псевдонимом Мосалла Нежад подал такую статью в журналApplied Mathematics and Computation, где её приняли, но успели изъять до печати после объяснения, что это была мистификация.


Виртуальный собеседник. 
Виртуальный собеседник — это компьютерная программа, которая создана для имитации речевого поведения человека при общении с одним или несколькими пользователями. По отношению к виртуальным собеседникам употребляется также название программа-собеседник.
Одним из первых виртуальных собеседников была программа Элиза, созданная в 1966 году Джозефом Вейзенбаумом. Элиза пародировала речевое поведение психотерапевта, реализуя технику активного слушания, переспрашивая пользователя и используя фразы типа «Пожалуйста, продолжайте».
Предполагается, что идеальная программа-собеседник должна пройти Тест Тьюринга. Проводятся ежегодные конкурсы программ-собеседников (в основном англоязычных). Один из самых известных — конкурс Лебнера.
Принцип действия.
Виртуальные собеседники работают с «живым» языком. Обработка естественного языка, особенного разговорного стиля, — острая проблема искусственного интеллекта. И конечно, современные программы-собеседники — лишь попытки имитировать разумный диалог с машиной.
Как любая интеллектуальная система, виртуальный собеседник имеет базу знаний. В простейшем случае она представляет собой наборы возможных вопросов пользователя и соответствующих им ответов. Наиболее распространённые методы выбора ответа в этом случае следующие:
•	Реакция на ключевые слова: Данный метод был использован в Элизе. Например, если фраза пользователя содержала слова «отец», «мать», «сын» и другие, Элиза могла ответить: «Расскажите больше о вашей семье».
•	Совпадение фразы: Имеется в виду похожесть фразы пользователя с теми, что содержатся в базе знаний. Может учитываться также порядок слов.
•	Совпадение контекста: Часто в руководствах к программам-собеседникам просят не использовать фразы, насыщенные местоимениями, типа: «А что это такое?» Для корректного ответа некоторые программы могут проанализировать предыдущие фразы пользователя и выбрать подходящий ответ.
Своеобразной мини-проблемой являются идентификация форм слова и синонимов.

Назначение виртуальных собеседников.
Данное виртуальным собеседникам определение не совсем точно. Дело в том, что цели конкретных диалогов между людьми различаются. Можно просто «поболтать», а можно обсудить важную проблему. Реализация последнего типа диалога представляет дополнительную проблему: научить программу мыслить. Поэтому функциональность большинства современных программ ограничивается возможностью ведения незатейливой беседы.
Программы, способные понимать отдельные высказывания пользователя, образуют класс программ с естественно-языковым интерфейсом. Смотрите, например вопросно-ответная система( вопросно-ответная система — это информационная система, способная принимать вопросы и отвечать на них на естественном языке, другими словами, это система с естественно-языковым интерфейсом.)
Создание виртуальных собеседников граничит с проблемой общего искусственного интеллекта, то есть единой системы (программы, машины), моделирующей интеллектуальную деятельность человека. Для дополнительной информации рассмотрим статью Тест Тьюринга.
Тест Тьюринга — эмпирический тест, идея которого была предложена Аланом Тьюрингом в статье «Вычислительные машины и разум», опубликованной в 1950 году в философском журнале «Mind». Тьюринг задался целью определить, может ли машина мыслить.
Стандартная интерпретация этого теста звучит следующим образом: «Человек взаимодействует с одним компьютером и одним человеком. На основании ответов на вопросы он должен определить, с кем он разговаривает: с человеком или компьютерной программой. Задача компьютерной программы — ввести человека в заблуждение, заставив сделать неверный выбор».
Все участники теста не видят друг друга. Если судья не может сказать определенно, кто из собеседников является человеком, то считается, что машина прошла тест. Чтобы протестировать именно интеллект машины, а не её возможность распознавать устную речь, беседа ведется в режиме «только текст», например, с помощью клавиатуры и экрана (компьютера-посредника). Переписка должна производиться через контролируемые промежутки времени, чтобы судья не мог делать заключения, исходя из скорости ответов. Во времена Тьюринга компьютеры реагировали медленнее человека. Сейчас это правило тоже необходимо, потому что они реагируют гораздо быстрее, чем человек.



























1.	Основная часть
Обоснование выбора средств и методов для выполнения задания
       Средством для выполнения задания была выбрана среда разработки VisualStudio 2010 от Microsoft. Разработка шла под операционную систему Windows 7(на других продуктах Microsoft серии Windows и иных платформах тестирование не проводилось).
                Использовались следующие стандартные библиотеки языка C++:
•	<iostream>
Это заголовочный файл с классами, переменными и функциями,
организующий ввод и вывод в C++.
<iostream> использует такие объекты как cout, cerr, cin, clog, чтобы передавать информацию в и из стандартных потоков ввода/вывода, а также ошибок с/без буферизации. Как части STL C++, данные объекты являются частью std – стандартного пространства имён.
	Пример программы с использованием библиотеки <iostream>:

#include <iostream>

int main ()
{
	std::cout << “…” << std::endl;
	return 0;
}

//====================
#include <iostream> является cpp-аналогом одной из старых библиотек <iostream.h>, которые последние версии компиляторов (Visual C++, etc.) не поддерживают.

•	<cstdlib>

Аналогично <stdlib.h> - заголовочному файлу STL языка Си – данная библиотека используется в C++ для той же цели. Она содержит функции, которые занимаются выделением памяти, осуществляют контроль процесса работы (выполнения) программы, преобразуют типы и др. 
	Эта библиотека определяет различные типы данных: size_t, div_t, ldiv_t и др. К примеру, стандарт определяет последние 2 типа таким образом:

typedef struct {
	int quot, rem;
} div_t;
//====================
typedef struct {
	long int quot, rem;
} ldiv_t;

//====================
«stdlib» расшифровывается как «стандартная библиотека» (standard library).


•	<cstring>
 Это заголовочный файл стандартной библиотеки языка Си, содержащий функции для работы с нуль-терминированными строками и различными функциями работы с памятью. 
Функции, объявленные cstring в широко используются, так как являясь частью стандартной библиотеки, они гарантированно работают на всех платформах, поддерживающих Си. Кроме этого, строковые функции работают только с набором символов ASCII или его совместимыми расширениями, такими как ISO-8859-1; многобайтовые кодировки такие как UTF-8 будут работать, с отличием, что «длина» строки будет определяться как число байтов, а не число символов Юникода, которым они соответствуют. Большинство функций cstring не производят никакого выделения памяти и контроля границ; эта обязанность целиком ложится на плечи программиста. Вот пример этого кода:
CString s;
LPCTSTR lp;
s="Hi";
lp = (LPCTSTR) s;
printf(lp);
return 0;



В данной курсовой работе исследуются алгоритмы генерации случайных текстов. Случайный текст - это последовательность слов, пробелов и знаков препинания. Слова, из которых состоит случайных текст, совсем необязательно существуют в реальном языке, так же как и сам случайный текст может вовсе не иметь смысла. Случайные тексты играют огромную роль в жизни современного общества. Многие композиторы используют генераторы случайных текстов для создания стихов к написанной ими музыке. Сама музыка также может быть сгенерирована подобными генераторами. Многие газетные и журнальные статьи тоже генерируются компьютерами. В связи с вышесказанным, данная курсовая работа является очень актуальной.






























2. Интерфейс командной строки.


 


Из интерфейса видно,что мой генератор текста состоит из 5 строк:
1-4 строки сам генератор текста.
5 строка показывает, что если нажать на любую кнопку, то можно выйти из консоли




3. Приложения

1) Рассмотрение кода мы начнем с функции <main> , данная функция принимает данные ей два параметра int argc и char argv , оба параметра нужны для фукции gluinit , что позволяет работать с окнами , также оба параметра идут прямиком в эту функцию. 	
int main (int argc, char ** argv) 

2) Дальше рассмотрим функцию setlocale. Она задает локаль, которая будет использоваться текущей программой. Можно изменить все параметры локали, или конкретные её части. Эта функция также может быть использована для получения имени текущей локали, передав NULL в через параметр locale.
Локаль содержит информацию о том, как интерпретировать и выполнять определенные операции ввода/вывода и преобразования с учетом географического расположения и специфики языков в определённых условиях.

3) Функция system. Она передает строку, адресуемую параметром str, в качестве команды для командного процессора операционной системы.
Если функция system() вызывается с нулевым указателем, она возвращает ненулевое значение при условии доступности командного процессора и нуль в противном случае. (Программы, выполняемые в специальных средах, могут не иметь доступа к командному процессору.) Значение, возвращаемое функцией system(), определяется конкретной реализацией. Но обычно возвращается нуль при успешном выполнении команды, а ненулевое значение кода возврата означает наличие ошибки.

4) Оператор return. Он завершает выполнение функции, в которой он задан, и возвращает управление в вызывающую функцию, в точку, непосредственно следующую за вызовом. Функция main передает управление операционной системе. Формат оператора:
return [выражение] ;
Значение выражения, если оно задано, возвращается в вызывающую функцию в качестве значения вызываемой функции. Если выражение опущено, то возвращаемое значение не определено. Выражение может быть заключено в круглые скобки, хотя их наличие не обязательно.
Если в какой-либо функции отсутствует оператор return, то передача управления в вызывающую функцию происходит после выполнения последнего оператора вызываемой функции. При этом возвращаемое значение не определено. Если функция не должна иметь возвращаемого значения, то ее нужно объявлять с типом void.
Таким образом, использование оператора return необходимо либо для немедленного выхода из функции, либо для передачи возвращаемого значения.


 
4. Заключение
Этот генератор был протестирован и отлажен. Результат работы свидетельствуют о моем достижении  поставленной цели. В процессе её выполнения мной были более глубоко изучены алгоритмы генерации случайных текстов и накоплен опыт в построении и реализации. Все трудности, возникшие в ходе выполнения курсовой работы, были успешно преодолены, а полученные результаты могут быть использованы при создании генераторов случайных текстов, не уступающих генераторам таких известных корпораций, как Microsoft, IBM, Symantec, Adobe.





















5. Список литературы

•	Герберт Шилдт. C++ Руководство для начинающих. Второе издание. Москва · Санкт-Петербург · Киев 2005. © Издательский дом «Вильямс».

•	© 2015 CppStudio – Программирование для начинающих на C++. cppstudio.com

•	Керниган, Б. Язык программирования С, 2-е издание / Б. Керниган, Д. Ритчи. – М.: Издательский дом “Вильямс”, 2006. – 304 с.: ил.










